{"version":3,"sources":["Item.jsx","Cart.jsx","CartFullInfo.jsx","AllItem.jsx","App.js","serviceWorker.js","index.js"],"names":["Item","state","show","showPriceInformation","setState","addItemToCart","e","props","addToCart","target","id","Col","md","className","Card","Img","variant","src","this","item","imgurl","Body","Subtitle","name","onClick","itemId","price","Component","Cart","items","length","showCart","CartFullInfo","map","i","Row","key","Image","width","height","roundedCircle","AllItem","cart","temp","push","Container","style","transition","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a093eac5.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Card, Col } from \"react-bootstrap\";\nexport default class Item extends Component {\n  state = {\n    show: false,\n  };\n\n  showPriceInformation = () => {\n    this.setState({ show: !this.state.show });\n    // this.setState(prevState => ({show : !prevState.show}))\n  };\n\n  addItemToCart = (e) => {\n    this.props.addToCart(e.target.id);\n    // this.setState({ show: !this.state.show });\n    // this.setState(prevState => ({show : !prevState.show}))\n  };\n\n  render() {\n    return (\n      <Col md=\"4\" className=\"mb-3\">\n        <Card>\n          <Card.Img variant=\"top\" src={this.props.item.imgurl} />\n          {/* <img src={this.props.item.imgurl} /> */}\n          <Card.Body>\n            <Card.Subtitle>{this.props.item.name}</Card.Subtitle>\n\n            <button onClick={this.showPriceInformation} className=\"showPrice\">\n              show price\n            </button>\n            <button\n              onClick={this.addItemToCart}\n              id={this.props.itemId}\n              className=\"showPrice\"\n            >\n              Add To Cart\n            </button>\n          </Card.Body>\n\n          {this.state.show && (\n            <div className=\"itemPrice\">{this.props.item.price}</div>\n          )}\n        </Card>\n      </Col>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nexport default class Cart extends Component {\n  render() {\n    return (\n      <div>\n        <h1>Cart {this.props.items.length}</h1>\n        <button onClick={this.props.showCart}>show cart</button>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Row, Col, Image } from \"react-bootstrap\";\n\nfunction CartFullInfo(props) {\n  return (\n    <div>\n      {props.items.map((item, i) => (\n        <Row key={i}>\n          <Col md=\"3\">\n            <Image src={item.imgurl} width={50} height={50} roundedCircle />\n          </Col>\n          <Col md=\"9\">{item.name}</Col>\n        </Row>\n      ))}\n    </div>\n  );\n}\n\nexport default CartFullInfo;\n","import React, { Component } from \"react\";\nimport Item from \"./Item\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport Cart from \"./Cart\";\nimport CartFullInfo from \"./CartFullInfo\";\n\nclass AllItem extends Component {\n  state = {\n    items: [\n      {\n        imgurl:\n          \"https://vn-test-11.slatic.net/p/031dbea8b772b54ebaa077c0ac5648c0.jpg\",\n        name: \"Summer Youth Men's Short-sleeved Shirt Korean Style Slim Fit\",\n        price: 120,\n      },\n      {\n        imgurl:\n          \"https://my-test-11.slatic.net/p/48977eba66358d5ab0c900fe8460a66d.jpg\",\n        name: \"FAVCENT shirt\",\n        price: 300,\n      },\n      {\n        imgurl:\n          \"https://my-test-11.slatic.net/p/37809e2652e1bed581f7bdc5348b4406.jpg\",\n        name: \"LA mens Dogdes\",\n        price: 110,\n      },\n      {\n        imgurl:\n          \"https://sg-test-11.slatic.net/p/d3146d26a38cb4a1b90c6cb940c5daaf.jpg\",\n        name: \"Face Mask High Quality\",\n        price: 50,\n      },\n      {\n        imgurl:\n          \"https://sg-test-11.slatic.net/p/f1d465126512403dc502971ed59d8e7f.jpg\",\n        name: \"face protection\",\n        price: 30,\n      },\n      {\n        imgurl:\n          \"https://my-test-11.slatic.net/p/245795d2888a0d08bf5a00af4ee60ff7.jpg\",\n        name: \"jersey\",\n        price: 300,\n      },\n      {\n        imgurl:\n          \"https://my-test-11.slatic.net/p/aa153c669ee4111c91769ef41cdbdac8.jpg\",\n        name: \"crappy\",\n        price: 20,\n      },\n      {\n        imgurl:\n          \"https://sg-test-11.slatic.net/p/mdc/862ffe45ece925628e4a1d6c52374ceb.png\",\n        name: \"coffee beans\",\n        price: 350,\n      },\n    ],\n    cart: [],\n    showCart: false,\n  };\n\n  addToCart = (id) => {\n    // console.log(id);\n    // console.log(this.state.items[id]);\n\n    let temp = { ...this.state };\n\n    temp.cart.push(temp.items[id]);\n    this.setState(temp);\n  };\n\n  showCart = () => {\n    if (this.state.cart.length) {\n      this.setState({ showCart: !this.state.showCart });\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"AllItem\">\n        <Cart items={this.state.cart} showCart={this.showCart} />\n        <Container>\n          <div>All Items</div>\n          <Row>\n            <Col\n              style={{\n                transition: \"all 1s ease\",\n              }}\n              md={this.state.showCart && this.state.cart.length ? \"9\" : \"12\"}\n            >\n              <Row>\n                {this.state.items.map((item, i) => (\n                  <Item\n                    addToCart={this.addToCart}\n                    item={item}\n                    itemId={i}\n                    key={i}\n                  />\n                ))}\n              </Row>\n            </Col>\n            {this.state.showCart && (\n              <Col md={3}>\n                <CartFullInfo items={this.state.cart} />\n              </Col>\n            )}\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default AllItem;\n","import React from \"react\";\nimport AllItem from \"./AllItem\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <AllItem />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}